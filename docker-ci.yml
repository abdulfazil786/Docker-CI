# This workflow automates the process of building a Docker image and pushing it to a registry.

name: Docker CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push events to the 'main' branch
  push:
    branches: [ "main" ]
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs
jobs:
  # This job handles building and pushing the Docker image
  build_and_push_image:
    runs-on: ubuntu-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks out your repository under $GITHUB_WORKSPACE, so your workflow can access it
      - name: Checkout repository
        uses: actions/checkout@v4

      # Sets up Docker Buildx, which provides powerful build capabilities
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Logs in to Docker Hub using the repository secrets
      # These secrets must be configured in your GitHub repository settings under Settings > Secrets and variables > Actions
      # DOCKER_USERNAME: your Docker Hub username
      # DOCKER_PASSWORD: a Docker Hub Personal Access Token (PAT)
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      # Defines the image name and tags
      - name: Define image tags
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/simple-python-app
          tags: |
            type=raw,value=latest
            type=sha

      # Builds and pushes the Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}